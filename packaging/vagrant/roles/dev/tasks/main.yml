---

# Variable setup.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

# Setup/install tasks.
- include: "setup-RedHat.yml"
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Install docker compose
  get_url: 
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: 0775

- name: Register the current Go version (if any)
  command: /usr/local/go/bin/go version
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: Install cloud dependencies
  pip: "name={{ item }}"
  with_items:
    - "azure==2.0.0rc5"
    - pyrax
    - apache-libcloud
    - boto

- name: Download the Go tarball
  get_url:
    url: "{{ go_download_location }}"
    dest: /usr/local/src/{{ go_tarball }}
    checksum: "{{ go_tarball_checksum }}"

- name: Extract the Go tarball if Go is not yet installed or not the desired version
  unarchive:
    src: /usr/local/src/{{ go_tarball }}
    dest: /usr/local
    copy: no
  when: go_version|failed or go_version.stdout != go_version_target

- name: Set GOPATHs for all users
  copy: "src={{ item }} dest=/etc/profile.d/"
  with_items:
    - go-path.sh
    - go-bin.sh

#- name: Set permissions for go path
#  file:
#    path: /go
#    state: directory
#    owner: "{{ ansible_ssh_user }}"
#    group: "{{ ansible_ssh_user }}"
#    recurse: yes

- name: Create tensor project dir
  file:
    path: /var/lib/tensor/projects/
    state: directory
    owner: root
    group: root
    recurse: yes

- name: Copy tensor playbooks
  copy:
    src: "{{ playbook_dir }}/../ansible/playbooks"
    dest: /var/lib/tensor/

- name: Copy tensor plugins
  copy:
    src: "{{ playbook_dir }}/../ansible/plugins"
    dest: /var/lib/tensor/

- name: Make ansible inventory plugins executable
  file: "path=/var/lib/tensor/plugins/inventory/{{ item }} mode=0755 state=file"
  with_items: "{{ inventory_plugins }}"

- name: Create tensor data dir
  file:
    path: /data/tensor
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"

- name: Ensure Tensor is configured.
  template:
    src: tensor.conf.j2
    dest: "{{ tensor_conf_path }}"
    mode: 0644
  notify: "Restart MongoDB"

- name: Install reflex
  become: false
  shell: go get -v github.com/cespare/reflex
  environment:
    GOPATH: /go
    PATH : "{{ ansible_env.PATH }}:/go/bin:/usr/local/go/bin"

- name: Update go libraries
  become: false
  shell: cd /go/src/github.com/pearsonappeng/tensor/ && go get -v ./...
  environment:
    GOPATH: /go
    PATH : "{{ ansible_env.PATH }}:/go/bin:/usr/local/go/bin"

- name: Set tensor path when vagrant ssh
  become: false
  shell: 'echo "cd /go/src/github.com/pearsonappeng/tensor/" >> ~/.profile  && echo "cd /go/src/github.com/pearsonappeng/tensor/" >> ~/.bashrc'